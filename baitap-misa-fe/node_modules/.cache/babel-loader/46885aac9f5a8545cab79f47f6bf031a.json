{"remainingRequest":"C:\\Users\\M'penGu\\Desktop\\MISA.FINAL\\baitap-misa-fe\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\M'penGu\\Desktop\\MISA.FINAL\\baitap-misa-fe\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\M'penGu\\Desktop\\MISA.FINAL\\baitap-misa-fe\\src\\store\\index.js","dependencies":[{"path":"C:\\Users\\M'penGu\\Desktop\\MISA.FINAL\\baitap-misa-fe\\src\\store\\index.js","mtime":1630690881293},{"path":"C:\\Users\\M'penGu\\Desktop\\MISA.FINAL\\baitap-misa-fe\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630690866282},{"path":"C:\\Users\\M'penGu\\Desktop\\MISA.FINAL\\baitap-misa-fe\\node_modules\\babel-loader\\lib\\index.js","mtime":1630690865957},{"path":"C:\\Users\\M'penGu\\Desktop\\MISA.FINAL\\baitap-misa-fe\\node_modules\\eslint-loader\\index.js","mtime":1630690869917}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL00ncGVuR3UvRGVza3RvcC9NSVNBLkZJTkFML2JhaXRhcC1taXNhLWZlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBWdWV4IGZyb20gJ3Z1ZXgnOwppbXBvcnQgKiBhcyBkYXRhIGZyb20gJy4vZGF0YSc7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7ClZ1ZS51c2UoVnVleCk7CmV4cG9ydCB2YXIgc3RvcmUgPSBuZXcgVnVleC5TdG9yZSh7CiAgc3RhdGU6IHsKICAgIFVSTF9BUEk6ICJodHRwczovL2xvY2FsaG9zdDo0NDM0NC9hcGkvdjEvIiwKICAgIC8vIG1vZGUgPSAwID0+IGFkZCBuZXcgCiAgICAvLyBtb2RlID0gMSA9PiBlZGl0IAogICAgTU9ERTogMCwKICAgIC8vIGVtcGxveWVlIGxpc3QKICAgIGVtcGxveWVlczogW10sCiAgICAvLyBlbXBsb3llZSBkYXRhCiAgICBlbXBsb3llZTogewogICAgICBlbXBsb3llZUNvZGU6IG51bGwsCiAgICAgIGZ1bGxOYW1lOiBudWxsLAogICAgICBkYXRlT2ZCaXJ0aDogbnVsbCwKICAgICAgZ2VuZGVyOiAwLAogICAgICBkZXBhcnRtZW50SWQ6IG51bGwsCiAgICAgIGlkZW50aXR5TnVtYmVyOiBudWxsLAogICAgICBpZGVudGl0eURhdGU6IG51bGwsCiAgICAgIGlkZW50aXR5UGxhY2U6IG51bGwsCiAgICAgIHBvc2l0aW9uTmFtZTogbnVsbCwKICAgICAgYWRkcmVzczogbnVsbCwKICAgICAgaG90bGluZTogbnVsbCwKICAgICAgcGhvbmVOdW1iZXI6IG51bGwsCiAgICAgIGVtYWlsOiBudWxsLAogICAgICBiYW5rTmFtZTogbnVsbCwKICAgICAgYWNjb3VudE51bWJlcjogbnVsbCwKICAgICAgYnJhbmNoTmFtZTogbnVsbAogICAgfSwKICAgIC8vIGVtcGxveWVlIGlkCiAgICBlbXBsb3llZUlkOiAiIiwKICAgIC8vIHN0YXR1cyBvcGVuIGZvcm0gIAogICAgaXNPcGVuOiBmYWxzZSwKICAgIC8vIG5ldyBlbXBsb3llZSBjb2RlIAogICAgbmV3Q29kZTogIiIsCiAgICAvLyBwYWdlIGluZGV4CiAgICBwYWdlSW5kZXg6IDEsCiAgICAvLyBwYWdlIG51bWJlcnMKICAgIHBhZ2VOdW1iZXI6IDAsCiAgICAvLyBrZXkgc2VhcmNoCiAgICBrZXlzZWFyY2g6ICIiLAogICAgLy8gb3B0aW9ucyBmb3IgcGFnZSBzaXplCiAgICBvcHRpb25zUGFnaW5nOiBkYXRhLnBhZ2luZ09wdGlvbnMsCiAgICAvLyBvcHRpb24gZm9yIHBhZ2Ugc2l6ZSA9IDEwCiAgICBjdXJyZW50UGFnaW5nOiBkYXRhLnBhZ2luZ09wdGlvbnNbMF0sCiAgICAvLyBleHBhbmQgbWVudQogICAgZXhwYW5kOiBmYWxzZSwKICAgIC8vIGRlcGFydG1lbnQgbGlzdAogICAgZGVwYXJ0bWVudHM6IFtdLAogICAgLy8gc3RhdHVzIHJlbG9hZCB0YWJsZSAKICAgIGlzTG9hZGluZzogZmFsc2UsCiAgICB0b3RhbFJlY29yZDogMAogIH0sCiAgZ2V0dGVyczogewogICAgZ2V0VG90YWxSZWNvcmQ6IGZ1bmN0aW9uIGdldFRvdGFsUmVjb3JkKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS50b3RhbFJlY29yZDsKICAgIH0sCiAgICAvLyBnZXQgcGFhZ2UgbnVtYmVyCiAgICBnZXRQYWdlTnVtYmVyOiBmdW5jdGlvbiBnZXRQYWdlTnVtYmVyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5wYWdlTnVtYmVyOwogICAgfSwKICAgIC8vIGdldCBjbG9uZQogICAgZ2V0Q2xvbmU6IGZ1bmN0aW9uIGdldENsb25lKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jbG9uZTsKICAgIH0sCiAgICAvLyBnZXQgYXBpCiAgICBnZXRBUEk6IGZ1bmN0aW9uIGdldEFQSShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuVVJMX0FQSTsKICAgIH0sCiAgICAvLyBnZXQgbmV3Q09kZQogICAgZ2V0TmV3Q29kZTogZnVuY3Rpb24gZ2V0TmV3Q29kZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUubmV3Q29kZTsKICAgIH0sCiAgICAvLyBnZXQgc3RhdHVzIG9wZW4gZm9ybSAKICAgIGdldElzT3BlbjogZnVuY3Rpb24gZ2V0SXNPcGVuKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5pc09wZW47CiAgICB9LAogICAgLy8gZ2V0IGVtcGxveWVlCiAgICBnZXRFbXBsb3llZTogZnVuY3Rpb24gZ2V0RW1wbG95ZWUoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmVtcGxveWVlOwogICAgfSwKICAgIC8vIGdldCBtb2RlIAogICAgZ2V0TW9kZTogZnVuY3Rpb24gZ2V0TW9kZShzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuTU9ERTsKICAgIH0sCiAgICAvLyBnZXQgY3VycmVudCBvcHRpb24gcGFnaW5nCiAgICBnZXRDdXJyZW50UGFnaW5nOiBmdW5jdGlvbiBnZXRDdXJyZW50UGFnaW5nKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jdXJyZW50UGFnaW5nOwogICAgfSwKICAgIC8vIGxpc3Qgb3B0aW9ucyBwYWdpbmcKICAgIGdldE9wdGlvbnNQYWdpbmc6IGZ1bmN0aW9uIGdldE9wdGlvbnNQYWdpbmcoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLm9wdGlvbnNQYWdpbmc7CiAgICB9LAogICAgLy8gZ2V0IHN0YXR1cyBleHBhbmQgbWVudQogICAgZ2V0RXhwYW5kOiBmdW5jdGlvbiBnZXRFeHBhbmQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmV4cGFuZDsKICAgIH0sCiAgICAvLyBnZXQgZGVwYXJ0bWVudHMKICAgIGdldERlcGFydG1lbnRzOiBmdW5jdGlvbiBnZXREZXBhcnRtZW50cyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZGVwYXJ0bWVudHM7CiAgICB9LAogICAgLy8gZ2V0IGVtcGxveWVlcyBsaXN0CiAgICBnZXRFbXBsb3llZXM6IGZ1bmN0aW9uIGdldEVtcGxveWVlcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZW1wbG95ZWVzOwogICAgfSwKICAgIC8vIGdldCBrZXlzZWFyY2gKICAgIGdldEtleXNlYXJjaDogZnVuY3Rpb24gZ2V0S2V5c2VhcmNoKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5rZXlzZWFyY2g7CiAgICB9LAogICAgLy8gZ2V0IHN0YXR1cyBsb2FkaW5nCiAgICBnZXRJc0xvYWRpbmc6IGZ1bmN0aW9uIGdldElzTG9hZGluZyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuaXNMb2FkaW5nOwogICAgfSwKICAgIC8vIGdldCBlbXBsb3llZSBpZAogICAgZ2V0RW1wbG95ZWVJZDogZnVuY3Rpb24gZ2V0RW1wbG95ZWVJZChzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuZW1wbG95ZWVJZDsKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgU0VUX1RPVEFMX1JFQ09SRDogZnVuY3Rpb24gU0VUX1RPVEFMX1JFQ09SRChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS50b3RhbFJlY29yZCA9IHBheWxvYWQ7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIHNldCBwYWdlIG51bWJlcg0KICAgICAqIEF1dGhvciA6IE5ndXllblRoYW5nKDEvOSkgDQogICAgICovCiAgICBTRVRfUEFHRV9OVU1CRVI6IGZ1bmN0aW9uIFNFVF9QQUdFX05VTUJFUihzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5wYWdlTnVtYmVyID0gcGF5bG9hZDsKICAgIH0sCgogICAgLyoqDQogICAgICogc2V0IHBhZ2UgaW5kZXgNCiAgICAgKiBBdXRob3IgOiBOZ3V5ZW5UaGFuZygxLzkpIA0KICAgICAqLwogICAgU0VUX1BBR0VfSU5ERVg6IGZ1bmN0aW9uIFNFVF9QQUdFX0lOREVYKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLnBhZ2VJbmRleCA9IHBheWxvYWQ7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIFJlc2V0IGVtcGxveWVlIGFmdGVyIGFkZCBvciBlZGl0IA0KICAgICAqIEFVdGhvciA6IE5ndXllblRoYW5nKDMwLzgpDQogICAgICovCiAgICBTRVRfTlVMTF9FTVBMT1lFRTogZnVuY3Rpb24gU0VUX05VTExfRU1QTE9ZRUUoc3RhdGUpIHsKICAgICAgc3RhdGUuZW1wbG95ZWUgPSB7CiAgICAgICAgZW1wbG95ZWVDb2RlOiBudWxsLAogICAgICAgIGZ1bGxOYW1lOiBudWxsLAogICAgICAgIGRhdGVPZkJpcnRoOiBudWxsLAogICAgICAgIGdlbmRlcjogMCwKICAgICAgICBkZXBhcnRtZW50SWQ6IG51bGwsCiAgICAgICAgaWRlbnRpdHlOdW1iZXI6IG51bGwsCiAgICAgICAgaWRlbnRpdHlEYXRlOiBudWxsLAogICAgICAgIGlkZW50aXR5UGxhY2U6IG51bGwsCiAgICAgICAgcG9zaXRpb25OYW1lOiBudWxsLAogICAgICAgIGFkZHJlc3M6IG51bGwsCiAgICAgICAgaG90bGluZTogbnVsbCwKICAgICAgICBwaG9uZU51bWJlcjogbnVsbCwKICAgICAgICBlbWFpbDogbnVsbCwKICAgICAgICBiYW5rTmFtZTogbnVsbCwKICAgICAgICBhY2NvdW50TnVtYmVyOiBudWxsLAogICAgICAgIGJyYW5jaE5hbWU6IG51bGwKICAgICAgfTsKICAgIH0sCgogICAgLyoqDQogICAgICogc2V0IGRlcGFydG1lbnRzDQogICAgICogQXV0aG9yIDogTmd1eWVuVGhhbmcoMjkvOCkNCiAgICAgKi8KICAgIFNFVF9ERVBBUlRNRU5UUzogZnVuY3Rpb24gU0VUX0RFUEFSVE1FTlRTKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmRlcGFydG1lbnRzID0gcGF5bG9hZDsKICAgIH0sCgogICAgLyoqDQogICAgICogc2V0IG5ld0NvZGUNCiAgICAgKiBBdXRob3IgOiBOZ3V5ZW5UaGFuZygyOC84KQ0KICAgICAqLwogICAgU0VUX05FV19DT0RFOiBmdW5jdGlvbiBTRVRfTkVXX0NPREUoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUubmV3Q29kZSA9IHBheWxvYWQ7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIHNldCBpc09wZW4NCiAgICAgKiBBdXRob3IgOiBOZ3V5ZW5UaGFuZygyOS84KQ0KICAgICAqLwogICAgU0VUX0lTX09QRU46IGZ1bmN0aW9uIFNFVF9JU19PUEVOKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIHN0YXRlLmlzT3BlbiA9IHBheWxvYWQ7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIFNldCBtb2RlDQogICAgICogQXV0aG9yIDogTmd1eWVuVGhhbmcoMjkvOCkNCiAgICAgKi8KICAgIFNFVF9NT0RFOiBmdW5jdGlvbiBTRVRfTU9ERShzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5NT0RFID0gcGF5bG9hZDsKICAgIH0sCgogICAgLyoqDQogICAgICogU2V0IGVtcGxveWVlDQogICAgICogQXV0aG9yIDogTmd1eWVuVGhhbmcoMjkvOCkgDQogICAgICovCiAgICBTRVRfRU1QTE9ZRUU6IGZ1bmN0aW9uIFNFVF9FTVBMT1lFRShzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5lbXBsb3llZSA9IHBheWxvYWQ7CiAgICAgIGRlbGV0ZSBzdGF0ZS5lbXBsb3llZS5jcmVhdGVkQnk7CiAgICAgIGRlbGV0ZSBzdGF0ZS5lbXBsb3llZS5jcmVhdGVkRGF0ZTsKICAgICAgZGVsZXRlIHN0YXRlLmVtcGxveWVlLm1vZGlmaWVkQnk7CiAgICAgIGRlbGV0ZSBzdGF0ZS5lbXBsb3llZS5tb2RpZmllZERhdGU7CiAgICAgIGRlbGV0ZSBzdGF0ZS5lbXBsb3llZS5nZW5kZXJOYW1lOwogICAgICBkZWxldGUgc3RhdGUuZW1wbG95ZWUuZGVwYXJ0bWVudE5hbWU7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIHNldCBpZCBlbXBsb3llZQ0KICAgICAqIEF1dGhvciA6IE5ndXllblRoYW5nKDI5LzgpDQogICAgICovCiAgICBTRVRfRU1QTE9ZRUVfSUQ6IGZ1bmN0aW9uIFNFVF9FTVBMT1lFRV9JRChzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5lbXBsb3llZUlkID0gcGF5bG9hZDsKICAgIH0sCgogICAgLyoqDQogICAgICogQ2hvb3NlIG9wdGlvbiBwYWdpbmF0aW9ucw0KICAgICAqIEF1dGhvciA6IE5ndXllblRoYW5nKDI4LzgpDQogICAgICovCiAgICBTRVRfUEFHSU5HX09QVElPTjogZnVuY3Rpb24gU0VUX1BBR0lOR19PUFRJT04oc3RhdGUsIGluZGV4KSB7CiAgICAgIHN0YXRlLmN1cnJlbnRQYWdpbmcgPSBzdGF0ZS5vcHRpb25zUGFnaW5nW2luZGV4XTsgLy8gdGhpcy5zZXRFbXBsb3llZXMoKTsKICAgIH0sCgogICAgLyoqDQogICAgICogU2V0IHRvZ2dsZSBtZW51DQogICAgICogQXV0aG9yIDogTmd1eWVuVGhhbmcoMjgvOCkNCiAgICAgKi8KICAgIFNFVF9UT0dHTEVfTUVOVTogZnVuY3Rpb24gU0VUX1RPR0dMRV9NRU5VKHN0YXRlKSB7CiAgICAgIHN0YXRlLmV4cGFuZCA9ICFzdGF0ZS5leHBhbmQ7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIFNldCBlbXBsb3llZSANCiAgICAgKiBBdXRob3IgOiBOZ3V5ZW5UaGFuZygyOC84KQ0KICAgICAqLwogICAgU0VUX0VNUExPWUVFUzogZnVuY3Rpb24gU0VUX0VNUExPWUVFUyhzdGF0ZSwgcGF5bG9hZCkgewogICAgICBzdGF0ZS5lbXBsb3llZXMgPSBwYXlsb2FkOwogICAgfSwKCiAgICAvKioNCiAgICAgKiBTZXQga2V5c2VhcmNoDQogICAgICogQXV0aG9yIDogTmd1eWVuVGhhbmcoMjgvOCkNCiAgICAgKi8KICAgIFNFVF9LRVlTRUFSQ0g6IGZ1bmN0aW9uIFNFVF9LRVlTRUFSQ0goc3RhdGUsIHBheWxvYWQpIHsKICAgICAgc3RhdGUua2V5c2VhcmNoID0gcGF5bG9hZDsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIC8qKg0KICAgICAqIEdldCBlbXBsb3llZXMgbGlzdCBieSBwYWdpbmcNCiAgICAgKiBAcGFyYW0geyp9IGNvbnRleHQgDQogICAgICogQXV0aG9yIDogTmd1eWVuVGhhbmcoMjgvOCkNCiAgICAgKi8KICAgIHNldEVtcGxveWVlczogZnVuY3Rpb24gc2V0RW1wbG95ZWVzKGNvbnRleHQpIHsKICAgICAgdmFyIHBhZ2VJbmRleCA9IGNvbnRleHQuc3RhdGUucGFnZUluZGV4OwogICAgICB2YXIgcGFnZVNpemUgPSBjb250ZXh0LnN0YXRlLmN1cnJlbnRQYWdpbmcuUGFnZVNpemU7CiAgICAgIHZhciBrZXlzZWFyY2ggPSBjb250ZXh0LnN0YXRlLmtleXNlYXJjaDsKCiAgICAgIHRyeSB7CiAgICAgICAgY29udGV4dC5zdGF0ZS5pc0xvYWRpbmcgPSB0cnVlOwogICAgICAgIGF4aW9zLmdldChjb250ZXh0LnN0YXRlLlVSTF9BUEkgKyAiRW1wbG95ZWVzL1BhZ2luZz9rZXl3b3JkPSIuY29uY2F0KGtleXNlYXJjaCwgIiZwYWdlSW5kZXg9IikuY29uY2F0KHBhZ2VJbmRleCwgIiZwYWdlU2l6ZT0iKS5jb25jYXQocGFnZVNpemUpKS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocmVzcG9uc2UpIHsKICAgICAgICAgICAgdmFyIHJlc3VsdCwgZW1wbG95ZWVzOwogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgcmVzdWx0ID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICAgICAgICBlbXBsb3llZXMgPSBbXTsgLy8gY29uc29sZS5sb2cocmVzdWx0LmRhdGEuZGF0YSk7CgogICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICBlbXBsb3llZXMgPSByZXN1bHQuZGF0YS5kYXRhOwogICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIlNFVF9UT1RBTF9SRUNPUkQiLCByZXN1bHQuZGF0YS50b3RhbFJlY29yZCk7CiAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgiU0VUX1BBR0VfTlVNQkVSIiwgcmVzdWx0LmRhdGEudG90YU5ndXllblRoYW5nYWdlKTsKICAgICAgICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJTRVRfRU1QTE9ZRUVTIiwgZW1wbG95ZWVzKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoIlNFVF9FTVBMT1lFRVMiLCBbXSk7CiAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICBjb250ZXh0LnN0YXRlLmlzTG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICAgIH0pKTsKCiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94KSB7CiAgICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICB9OwogICAgICAgIH0oKSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICBjb250ZXh0LnN0YXRlLmlzTG9hZGluZyA9IHRydWU7CiAgICAgICAgICBjb25zb2xlLmxvZygiZ2V0IGVtcGxveWVlIGVycm9yICIgKyBlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgY29udGV4dC5zdGF0ZS5pc0xvYWRpbmcgPSB0cnVlOwogICAgICAgIGNvbnNvbGUubG9nKCJnZXQgZW1wbG95ZWUgZXJyb3IgIiArIGVycm9yKTsKICAgICAgfQogICAgfSwKCiAgICAvKioNCiAgICAgKiBHZXQgZW1wbG95ZWUgYnkgaWQNCiAgICAgKiBAcGFyYW0geyp9IGNvbnRleHQNCiAgICAgKiBBdXRob3IgOiBOZ3V5ZW5UaGFuZygyOS84KSANCiAgICAgKi8KICAgIHNldEVtcGxveWVlOiBmdW5jdGlvbiBzZXRFbXBsb3llZShfcmVmMikgewogICAgICB2YXIgZGlzcGF0Y2ggPSBfcmVmMi5kaXNwYXRjaCwKICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdCwKICAgICAgICAgIHN0YXRlID0gX3JlZjIuc3RhdGU7CgogICAgICB0cnkgewogICAgICAgIHZhciBpZCA9IHN0YXRlLmVtcGxveWVlSWQ7CiAgICAgICAgYXhpb3MuZ2V0KHN0YXRlLlVSTF9BUEkgKyAiRW1wbG95ZWVzLyIuY29uY2F0KGlkKSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgICAgICAgIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocmVzcG9uc2UpIHsKICAgICAgICAgICAgdmFyIHJlc3VsdDsKICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICByZXN1bHQgPSByZXNwb25zZS5kYXRhOwoKICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmRhdGEgIT0gbnVsbCkgewogICAgICAgICAgICAgICAgICAgICAgZGlzcGF0Y2goInNldERlcGFydG1lbnRzIik7CiAgICAgICAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9FTVBMT1lFRSIsIHJlc3VsdC5kYXRhKTsgLy8gZ8OhbiBk4buvIGxp4buHdSBjaG8gZW1wbG95ZWUKCiAgICAgICAgICAgICAgICAgICAgICBjb21taXQoIlNFVF9JU19PUEVOIiwgdHJ1ZSk7IC8vIG3hu58gZm9ybQogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgICAgIH0pKTsKCiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICAgICAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgIH07CiAgICAgICAgfSgpKS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJnZXQgZW1wbG95ZWUgYnkgaWQgZXJyb3IgIiArIGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygiZ2V0IGVtcGxveWVlIGJ5IGlkIGVycm9yICIgKyBlcnJvcik7CiAgICAgIH0KICAgIH0sCgogICAgLyoqDQogICAgICogR2V0IG5ldyBlbXBsb3llZSBjb2RlDQogICAgICogQXV0aG9yIDogTmd1eWVuVGhhbmcoMjgvOCkNCiAgICAgKi8KICAgIHNldE5ld0NvZGU6IGZ1bmN0aW9uIHNldE5ld0NvZGUoX3JlZjQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCBjb21taXQsIHN0YXRlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWY0LmRpc3BhdGNoLCBjb21taXQgPSBfcmVmNC5jb21taXQsIHN0YXRlID0gX3JlZjQuc3RhdGU7CgogICAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgICAgYXhpb3MuZ2V0KHN0YXRlLlVSTF9BUEkgKyAiRW1wbG95ZWVzL05ld0VtcGxveWVlQ29kZSIpLnRoZW4oIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIF9yZWY1ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgICAgdmFyIHJlc3VsdDsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShyZXN1bHQuZGF0YSAhPSBudWxsKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGfDoW4gbcOjIGNobyBuaMOibiB2acOqbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0ZS5lbXBsb3llZS5lbXBsb3llZUNvZGUgPSByZXN1bHQuZGF0YTsgLy8gZ8OhbiBtw6MgCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb21taXQoIlNFVF9ORVdfQ09ERSIsIHJlc3VsdC5kYXRhKTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNzsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCJzZXREZXBhcnRtZW50cyIpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29tbWl0KCJTRVRfRU1QTE9ZRUUiLCBzdGF0ZS5lbXBsb3llZSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShzdGF0ZS5NT0RFID09IDIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxNDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCJzZXRFbXBsb3llZSIpOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTY7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb21taXQoIlNFVF9JU19PUEVOIiwgdHJ1ZSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAxNjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICAgICAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeDMpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmNS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgIH0oKSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coImdldCBuZXcgZW1wbG95ZWUgY29kZSBlcnJvciAiICsgZXJyb3IpOwogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJnZXQgbmV3IGVtcGxveWVlIGNvZGUgZXJyb3IgIiArIGVycm9yKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWU0KTsKICAgICAgfSkpKCk7CiAgICB9LAoKICAgIC8qKg0KICAgICAqIHNldCBkZXBhcnRtZW50cw0KICAgICAqIEF1dGhvciA6IE5ndXllblRoYW5nKDI5LzgpDQogICAgICovCiAgICBzZXREZXBhcnRtZW50czogZnVuY3Rpb24gc2V0RGVwYXJ0bWVudHMoY29udGV4dCkgewogICAgICB0cnkgewogICAgICAgIGF4aW9zLmdldChjb250ZXh0LnN0YXRlLlVSTF9BUEkgKyAiRGVwYXJ0bWVudHMiKS50aGVuKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgdmFyIF9yZWY2ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNShyZXNwb25zZSkgewogICAgICAgICAgICB2YXIgcmVzdWx0OwogICAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHsKICAgICAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgICAgIHJlc3VsdCA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgiU0VUX0RFUEFSVE1FTlRTIiwgcmVzdWx0LmRhdGEpOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sIF9jYWxsZWU1KTsKICAgICAgICAgIH0pKTsKCiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24gKF94NCkgewogICAgICAgICAgICByZXR1cm4gX3JlZjYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgICAgIH07CiAgICAgICAgfSgpKS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCJnZXQgZGVwYXJ0bWVudHMgZXJyb3IgIiArIGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZygiZ2V0IGRlcGFydG1lbnRzIGVycm9yICIgKyBlcnJvcik7CiAgICAgIH0KICAgIH0KICB9Cn0pOw=="},{"version":3,"sources":["C:/Users/M'penGu/Desktop/MISA.FINAL/baitap-misa-fe/src/store/index.js"],"names":["Vue","Vuex","data","axios","use","store","Store","state","URL_API","MODE","employees","employee","employeeCode","fullName","dateOfBirth","gender","departmentId","identityNumber","identityDate","identityPlace","positionName","address","hotline","phoneNumber","email","bankName","accountNumber","branchName","employeeId","isOpen","newCode","pageIndex","pageNumber","keysearch","optionsPaging","pagingOptions","currentPaging","expand","departments","isLoading","totalRecord","getters","getTotalRecord","getPageNumber","getClone","clone","getAPI","getNewCode","getIsOpen","getEmployee","getMode","getCurrentPaging","getOptionsPaging","getExpand","getDepartments","getEmployees","getKeysearch","getIsLoading","getEmployeeId","mutations","SET_TOTAL_RECORD","payload","SET_PAGE_NUMBER","SET_PAGE_INDEX","SET_NULL_EMPLOYEE","SET_DEPARTMENTS","SET_NEW_CODE","SET_IS_OPEN","SET_MODE","SET_EMPLOYEE","createdBy","createdDate","modifiedBy","modifiedDate","genderName","departmentName","SET_EMPLOYEE_ID","SET_PAGING_OPTION","index","SET_TOGGLE_MENU","SET_EMPLOYEES","SET_KEYSEARCH","actions","setEmployees","context","pageSize","PageSize","get","then","response","result","commit","totaNguyenThangage","catch","error","console","log","setEmployee","dispatch","id","setNewCode","setDepartments"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport * as data from './data'\r\nimport axios from 'axios'\r\nVue.use(Vuex)\r\n\r\nexport const store = new Vuex.Store({\r\n    state: {\r\n        URL_API: \"https://localhost:44344/api/v1/\",\r\n        // mode = 0 => add new \r\n        // mode = 1 => edit \r\n        MODE: 0,\r\n        // employee list\r\n        employees: [],\r\n        // employee data\r\n        employee: {\r\n            employeeCode: null,\r\n            fullName: null,\r\n            dateOfBirth: null,\r\n            gender: 0,\r\n            departmentId: null,\r\n            identityNumber: null,\r\n            identityDate: null,\r\n            identityPlace: null,\r\n            positionName: null,\r\n            address: null,\r\n            hotline: null,\r\n            phoneNumber: null,\r\n            email: null,\r\n            bankName: null,\r\n            accountNumber: null,\r\n            branchName: null,\r\n        },\r\n        // employee id\r\n        employeeId: \"\",\r\n        // status open form  \r\n        isOpen: false,\r\n        // new employee code \r\n        newCode: \"\",\r\n\r\n        // page index\r\n        pageIndex: 1,\r\n        // page numbers\r\n        pageNumber: 0,\r\n        // key search\r\n        keysearch: \"\",\r\n        // options for page size\r\n        optionsPaging: data.pagingOptions,\r\n        // option for page size = 10\r\n        currentPaging: data.pagingOptions[0],\r\n        // expand menu\r\n        expand: false,\r\n\r\n        // department list\r\n        departments: [],\r\n        // status reload table \r\n        isLoading: false,\r\n\r\n        totalRecord: 0,\r\n\r\n    },\r\n\r\n    getters: {\r\n        getTotalRecord: state => state.totalRecord,\r\n        // get paage number\r\n        getPageNumber: state => state.pageNumber,\r\n        // get clone\r\n        getClone: state => state.clone,\r\n        // get api\r\n        getAPI: state => state.URL_API,\r\n        // get newCOde\r\n        getNewCode: state => state.newCode,\r\n        // get status open form \r\n        getIsOpen: state => state.isOpen,\r\n        // get employee\r\n        getEmployee: state => state.employee,\r\n        // get mode \r\n        getMode: state => state.MODE,\r\n        // get current option paging\r\n        getCurrentPaging: state => state.currentPaging,\r\n        // list options paging\r\n        getOptionsPaging: state => state.optionsPaging,\r\n        // get status expand menu\r\n        getExpand: state => state.expand,\r\n        // get departments\r\n        getDepartments: state => state.departments,\r\n        // get employees list\r\n        getEmployees: state => state.employees,\r\n        // get keysearch\r\n        getKeysearch: state => state.keysearch,\r\n        // get status loading\r\n        getIsLoading: state => state.isLoading,\r\n        // get employee id\r\n        getEmployeeId: state => state.employeeId,\r\n    },\r\n\r\n    mutations: {\r\n        SET_TOTAL_RECORD(state, payload) {\r\n            state.totalRecord = payload;\r\n        },\r\n        /**\r\n         * set page number\r\n         * Author : NguyenThang(1/9) \r\n         */\r\n        SET_PAGE_NUMBER(state, payload) {\r\n            state.pageNumber = payload;\r\n        },\r\n\r\n        /**\r\n         * set page index\r\n         * Author : NguyenThang(1/9) \r\n         */\r\n        SET_PAGE_INDEX(state, payload) {\r\n            state.pageIndex = payload;\r\n        },\r\n\r\n        /**\r\n         * Reset employee after add or edit \r\n         * AUthor : NguyenThang(30/8)\r\n         */\r\n        SET_NULL_EMPLOYEE(state) {\r\n            state.employee = {\r\n                employeeCode: null,\r\n                fullName: null,\r\n                dateOfBirth: null,\r\n                gender: 0,\r\n                departmentId: null,\r\n                identityNumber: null,\r\n                identityDate: null,\r\n                identityPlace: null,\r\n                positionName: null,\r\n                address: null,\r\n                hotline: null,\r\n                phoneNumber: null,\r\n                email: null,\r\n                bankName: null,\r\n                accountNumber: null,\r\n                branchName: null,\r\n            };\r\n        },\r\n\r\n        /**\r\n         * set departments\r\n         * Author : NguyenThang(29/8)\r\n         */\r\n        SET_DEPARTMENTS(state, payload) {\r\n            state.departments = payload;\r\n        },\r\n\r\n        /**\r\n         * set newCode\r\n         * Author : NguyenThang(28/8)\r\n         */\r\n        SET_NEW_CODE(state, payload) {\r\n            state.newCode = payload;\r\n        },\r\n\r\n        /**\r\n         * set isOpen\r\n         * Author : NguyenThang(29/8)\r\n         */\r\n        SET_IS_OPEN(state, payload) {\r\n            state.isOpen = payload;\r\n        },\r\n\r\n        /**\r\n         * Set mode\r\n         * Author : NguyenThang(29/8)\r\n         */\r\n        SET_MODE(state, payload) {\r\n            state.MODE = payload;\r\n        },\r\n\r\n        /**\r\n         * Set employee\r\n         * Author : NguyenThang(29/8) \r\n         */\r\n        SET_EMPLOYEE(state, payload) {\r\n            state.employee = payload;\r\n            delete state.employee.createdBy;\r\n            delete state.employee.createdDate;\r\n            delete state.employee.modifiedBy;\r\n            delete state.employee.modifiedDate;\r\n            delete state.employee.genderName;\r\n            delete state.employee.departmentName;\r\n        },\r\n\r\n        /**\r\n         * set id employee\r\n         * Author : NguyenThang(29/8)\r\n         */\r\n        SET_EMPLOYEE_ID(state, payload) {\r\n            state.employeeId = payload;\r\n        },\r\n\r\n        /**\r\n         * Choose option paginations\r\n         * Author : NguyenThang(28/8)\r\n         */\r\n        SET_PAGING_OPTION(state, index) {\r\n            state.currentPaging = state.optionsPaging[index];\r\n            // this.setEmployees();\r\n        },\r\n        /**\r\n         * Set toggle menu\r\n         * Author : NguyenThang(28/8)\r\n         */\r\n        SET_TOGGLE_MENU(state) {\r\n            state.expand = !state.expand;\r\n        },\r\n\r\n        /**\r\n         * Set employee \r\n         * Author : NguyenThang(28/8)\r\n         */\r\n        SET_EMPLOYEES(state, payload) {\r\n            state.employees = payload;\r\n        },\r\n\r\n        /**\r\n         * Set keysearch\r\n         * Author : NguyenThang(28/8)\r\n         */\r\n        SET_KEYSEARCH(state, payload) {\r\n            state.keysearch = payload;\r\n        },\r\n\r\n\r\n    },\r\n\r\n    actions: {\r\n        /**\r\n         * Get employees list by paging\r\n         * @param {*} context \r\n         * Author : NguyenThang(28/8)\r\n         */\r\n        setEmployees: context => {\r\n            const pageIndex = context.state.pageIndex;\r\n            const pageSize = context.state.currentPaging.PageSize;\r\n            const keysearch = context.state.keysearch;\r\n            try {\r\n                context.state.isLoading = true;\r\n                axios.get(context.state.URL_API + `Employees/Paging?keyword=${keysearch}&pageIndex=${pageIndex}&pageSize=${pageSize}`).then(async function(response) {\r\n                    let result = response.data;\r\n                    let employees = [];\r\n                    // console.log(result.data.data);\r\n                    if (result.data != null) {\r\n                        employees = result.data.data;\r\n                        context.commit(\"SET_TOTAL_RECORD\", result.data.totalRecord);\r\n                        context.commit(\"SET_PAGE_NUMBER\", result.data.totaNguyenThangage);\r\n                        context.commit(\"SET_EMPLOYEES\", employees);\r\n\r\n                    } else {\r\n                        context.commit(\"SET_EMPLOYEES\", []);\r\n                    }\r\n                    context.state.isLoading = false;\r\n\r\n                }).catch(error => {\r\n                    context.state.isLoading = true;\r\n                    console.log(\"get employee error \" + error);\r\n                })\r\n            } catch (error) {\r\n                context.state.isLoading = true;\r\n                console.log(\"get employee error \" + error);\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Get employee by id\r\n         * @param {*} context\r\n         * Author : NguyenThang(29/8) \r\n         */\r\n        setEmployee({ dispatch, commit, state }) {\r\n            try {\r\n                const id = state.employeeId;\r\n                axios.get(state.URL_API + `Employees/${id}`).then(async function(response) {\r\n                    let result = response.data;\r\n                    if (result.data != null) {\r\n                        dispatch(\"setDepartments\");\r\n                        commit(\"SET_EMPLOYEE\", result.data); // gán dữ liệu cho employee\r\n                        commit(\"SET_IS_OPEN\", true); // mở form\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(\"get employee by id error \" + error);\r\n                })\r\n            } catch (error) {\r\n                console.log(\"get employee by id error \" + error);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get new employee code\r\n         * Author : NguyenThang(28/8)\r\n         */\r\n        async setNewCode({ dispatch, commit, state }) {\r\n            try {\r\n                axios.get(state.URL_API + `Employees/NewEmployeeCode`).then(async function(response) {\r\n                    let result = response.data;\r\n                    if (result.data != null) {\r\n                        // gán mã cho nhân viên\r\n                        state.employee.employeeCode = result.data;\r\n                        // gán mã \r\n                        await commit(\"SET_NEW_CODE\", result.data);\r\n                        // get list departments\r\n                        await dispatch(\"setDepartments\");\r\n                        // reset form\r\n                        await commit(\"SET_EMPLOYEE\", state.employee);\r\n                        if (state.MODE == 2) { // nếu mode = 2 => nhân bản dữ liệu\r\n                            await dispatch(\"setEmployee\"); // lấy dữ liệu theo id => gán vào employee\r\n                        } else { // mode != 2 (thêm hoặc sửa nhân viên) => mở form \r\n                            await commit(\"SET_IS_OPEN\", true);\r\n                        }\r\n\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(\"get new employee code error \" + error);\r\n                })\r\n            } catch (error) {\r\n                console.log(\"get new employee code error \" + error);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * set departments\r\n         * Author : NguyenThang(29/8)\r\n         */\r\n        setDepartments: context => {\r\n            try {\r\n                axios.get(context.state.URL_API + `Departments`).then(async function(response) {\r\n                    let result = response.data;\r\n                    if (result.data != null) {\r\n                        context.commit(\"SET_DEPARTMENTS\", result.data);\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(\"get departments error \" + error);\r\n                })\r\n            } catch (error) {\r\n                console.log(\"get departments error \" + error);\r\n            }\r\n        },\r\n    }\r\n})"]}]}